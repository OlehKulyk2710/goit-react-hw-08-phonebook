{"version":3,"file":"static/js/548.1983026e.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/Header/Header.jsx","components/Header/Header.styled.js","services/constants.js","components/UserRegistration/UserRegistration.styled.js","components/UserRegistration/UserRegistration.jsx","services/normalizedInputData.js","services/validation.js","components/UserLogIn/UserLogIn.styled.js","components/UserLogIn/UserLogIn.jsx","components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.jsx","redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/EditContactForm/EditContactForm.module.css?43d2","components/EditContactForm/EditContactForm.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 50vw;\n  margin: 0 auto;\n  padding-left: 25px;\n  padding-right: 25px;\n`;\n\nexport const Main = styled.main`\n  padding-top: 25px;\n  padding-bottom: 25px;\n`;\n\nexport const Heading = styled.h1`\n  padding: 0;\n  margin: 0;\n  margin-bottom: 25px;\n  text-decoration: underline;\n`;\n\nexport const Title = styled.h2`\n  padding: 0;\n  margin: 0;\n  margin-bottom: 15px;\n`;\n\nexport const MainText = styled.p`\n  font-size: 18px;\n`;\n\n// .container {\n//   width: 480px;\n//   margin: 10px auto 0;\n//   padding: 20px;\n//   border: 1px solid #757575;\n//   border-radius: 10px;\n// }\n","import { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth/auth-selectors';\n\nimport {\n  NavBar,\n  Container,\n  LinkWrapper,\n  Wrapper,\n  NavLinkStyled,\n  UserMenu,\n} from 'components';\n\nexport const Header = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <NavBar>\n      <Container>\n        <LinkWrapper>\n          <Wrapper>\n            <NavLinkStyled to=\"/\">Home</NavLinkStyled>\n            {isLoggedIn && (\n              <NavLinkStyled to=\"/contacts\">Contacts</NavLinkStyled>\n            )}\n          </Wrapper>\n\n          {isLoggedIn ? (\n            <UserMenu />\n          ) : (\n            <Wrapper>\n              <NavLinkStyled to=\"/register\">Register</NavLinkStyled>\n              <NavLinkStyled to=\"/login\">Login</NavLinkStyled>\n            </Wrapper>\n          )}\n        </LinkWrapper>\n      </Container>\n    </NavBar>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = styled.header`\n  padding-top: 15px;\n  padding-bottom: 15px;\n  border-bottom: 3px solid gray;\n`;\n\nexport const LinkWrapper = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  padding: 5px;\n  font-weight: 600;\n  font-size: 18px;\n  color: black;\n  text-decoration: none;\n  border-radius: 5px;\n  transform: scale(1);\n\n  :not(:last-child) {\n    margin-right: 25px;\n  }\n\n  :hover,\n  :focus {\n    transform: scale(1.05);\n  }\n\n  &.active {\n    text-decoration: underline;\n    background-color: rgba(93, 174, 240, 0.9);\n    color: white;\n    transform: scale(1.05);\n  }\n`;\n","export const CONSTANTS = {\n  name: 'name',\n  email: 'email',\n  password: 'password',\n  number: 'number',\n};\n","import styled from 'styled-components';\nimport Box from '@mui/material/Box';\n\nexport const RegContainer = styled.div`\n  width: 320px;\n  margin: 0 auto;\n`;\n\nexport const BoxStyled = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Heading = styled.h1`\n  font-size: 22px;\n  text-decoration: underline;\n  text-align: center;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { CONSTANTS } from '../../services/constants';\nimport authOperations from 'redux/auth/auth-operations';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { normalizeInputData } from 'services/normalizedInputData';\nimport { validateData } from 'services/validation';\nimport { BoxStyled, Heading, RegContainer } from './UserRegistration.styled';\n\nexport const UserRegistration = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, email, password } = CONSTANTS;\n    const inputName = e.target.name;\n    const inputValue = e.target.value;\n\n    switch (inputName) {\n      case name:\n        setName(inputValue);\n        break;\n      case email:\n        setEmail(inputValue);\n        break;\n      case password:\n        setPassword(inputValue);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      name,\n      email,\n      password,\n    };\n\n    const normalizedUserData = normalizeInputData(userData);\n    const validatedData = validateData(normalizedUserData);\n    if (!validatedData) return;\n\n    dispatch(authOperations.register(normalizedUserData));\n\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <RegContainer>\n      <Heading>New User Registration</Heading>\n      <BoxStyled\n        component=\"form\"\n        name=\"reg-form\"\n        noValidate\n        onSubmit={handleSubmit}\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '30ch' },\n        }}\n      >\n        <TextField\n          onChange={handleChange}\n          autoComplete=\"given-name\"\n          name={CONSTANTS.name}\n          value={name}\n          required\n          fullWidth\n          label=\"Name\"\n          autoFocus\n        />\n\n        <TextField\n          onChange={handleChange}\n          required\n          fullWidth\n          label=\"Email\"\n          name={CONSTANTS.email}\n          value={email}\n          type=\"email\"\n          autoComplete=\"email\"\n        />\n        <TextField\n          onChange={handleChange}\n          required\n          fullWidth\n          name={CONSTANTS.password}\n          value={password}\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          sx={{\n            mt: 3,\n            mb: 2,\n            width: '20ch',\n          }}\n        >\n          Sign Up\n        </Button>\n      </BoxStyled>\n    </RegContainer>\n  );\n};\n","export const normalizeInputData = data => {\n  const { name, email, password } = data;\n  const normalizedName = name.trim();\n  const normalizedEmail = email.trim().toLowerCase();\n  const normalisedPassword = password.trim();\n\n  return {\n    name: normalizedName,\n    email: normalizedEmail,\n    password: normalisedPassword,\n  };\n};\n","import toast from 'react-hot-toast';\n\nexport const validateData = data => {\n  const { name, email, password } = data;\n  const isNameCorrect = name.length > 1 ? true : false;\n  const isEmailCorrect = email.includes('@');\n  const isPasswordCorrect = password.length >= 6 ? true : false;\n\n  if (!isNameCorrect) {\n    toast.error(`The name must be at least 1 character long.`);\n  }\n\n  if (!isEmailCorrect) {\n    toast.error(`Incorrect email.`);\n  }\n\n  if (!isPasswordCorrect) {\n    toast.error(`The password must be at least 6 characters long.`);\n  }\n\n  return isNameCorrect && isPasswordCorrect && isEmailCorrect;\n};\n","import styled from 'styled-components';\nimport Box from '@mui/material/Box';\n\nexport const LogInContainer = styled.div`\n  width: 320px;\n  margin: 0 auto;\n`;\n\nexport const BoxStyled = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Heading = styled.h1`\n  font-size: 22px;\n  text-decoration: underline;\n  text-align: center;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { CONSTANTS } from '../../services/constants';\nimport authOperations from 'redux/auth/auth-operations';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { BoxStyled, Heading, LogInContainer } from './UserLogIn.styled';\n\nexport const UserLogIn = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const { email, password } = CONSTANTS;\n    const inputName = e.target.name;\n    const inputValue = e.target.value;\n\n    switch (inputName) {\n      case email:\n        setEmail(inputValue);\n        break;\n      case password:\n        setPassword(inputValue);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email,\n      password,\n    };\n\n    dispatch(authOperations.logIn(userData));\n\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <LogInContainer>\n      <Heading>Log in</Heading>\n      <BoxStyled\n        component=\"form\"\n        name=\"reg-form\"\n        noValidate\n        onSubmit={handleSubmit}\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '30ch' },\n        }}\n      >\n        <TextField\n          onChange={handleChange}\n          required\n          fullWidth\n          label=\"Email\"\n          name={CONSTANTS.email}\n          value={email}\n          type=\"email\"\n          autoComplete=\"email\"\n        />\n        <TextField\n          onChange={handleChange}\n          required\n          fullWidth\n          name={CONSTANTS.password}\n          value={password}\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          sx={{\n            mt: 3,\n            mb: 2,\n            width: '20ch',\n          }}\n        >\n          Log in\n        </Button>\n      </BoxStyled>\n    </LogInContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport Button from '@mui/material/Button';\nimport { Wrapper, Text } from './UserMenu.styled';\nimport { authSelectors } from 'redux/auth/auth-selectors';\nimport authOperations from 'redux/auth/auth-operations';\n\nexport const UserMenu = () => {\n  const userName = useSelector(authSelectors.getUserName);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(authOperations.logOut());\n  };\n  return (\n    <Wrapper>\n      <Text>User: {userName}</Text>\n      <Button\n        onClick={handleClick}\n        type=\"button\"\n        variant=\"contained\"\n        sx={{\n          ml: 3,\n          p: '4px',\n          //   width: '12ch',\n        }}\n      >\n        Log Out\n      </Button>\n    </Wrapper>\n  );\n};\n","const getContacts = state => state.contacts.items;\nconst getFilterValue = state => state.contacts.filter;\nexport const contactsSelectors = { getContacts, getFilterValue };\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"EditContactForm_form__L+B1Z\",\"form__label\":\"EditContactForm_form__label__q6TV8\",\"form__input\":\"EditContactForm_form__input__Ol3+6\",\"btn__submit\":\"EditContactForm_btn__submit__PCfYI\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\n\nimport { contactsOperations } from 'redux/contacts/contacts-operations';\nimport { contactsSelectors } from 'redux/contacts/contacts-selectors';\nimport { CONSTANTS } from 'services/constants';\nimport css from './EditContactForm.module.css';\n\nexport const EditContactForm = ({\n  id,\n  name: currentName,\n  number: currentNumber,\n  onModalClose,\n}) => {\n  const [name, setName] = useState(currentName);\n  const [number, setNumber] = useState(currentNumber);\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const handleChange = event => {\n    const inputName = event.currentTarget.name;\n    const inputValue = event.currentTarget.value;\n\n    switch (inputName) {\n      case CONSTANTS.name:\n        setName(inputValue);\n        break;\n      case CONSTANTS.number:\n        setNumber(inputValue);\n        break;\n      default:\n        console.log('Unrecognized input name: ', { inputName });\n    }\n  };\n\n  const checkNewName = name => {\n    const newName = name.toLowerCase();\n    const isNameExist = contacts.filter(\n      item => item.name.toLowerCase() === newName && item.id !== id\n    );\n    return isNameExist.length;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isNameExist = checkNewName(name);\n    if (isNameExist) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(contactsOperations.updateContact({ id, name, number }));\n\n    setName('');\n    setNumber('');\n\n    onModalClose();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.form__label}>\n        Name\n        <input\n          className={css.form__input}\n          type=\"text\"\n          name={CONSTANTS.name}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.form__label}>\n        Number\n        <input\n          className={css.form__input}\n          type=\"tel\"\n          name={CONSTANTS.number}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={css.btn__submit}>\n        Submit\n      </button>\n    </form>\n  );\n};\n\nEditContactForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onModalClose: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__label\":\"ContactForm_form__label__8W82B\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"btn__submit\":\"ContactForm_btn__submit__zAi-V\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { contactsOperations } from 'redux/contacts/contacts-operations';\nimport { contactsSelectors } from 'redux/contacts/contacts-selectors';\nimport { CONSTANTS } from 'services/constants';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const handleChange = event => {\n    const inputName = event.currentTarget.name;\n    const inputValue = event.currentTarget.value;\n\n    switch (inputName) {\n      case CONSTANTS.name:\n        setName(inputValue);\n        break;\n      case CONSTANTS.number:\n        setNumber(inputValue);\n        break;\n      default:\n        console.log('Unrecognized input name: ', { inputName });\n    }\n  };\n\n  const checkNewName = name => {\n    const newName = name.toLowerCase();\n    const isNameExist = contacts.filter(\n      item => item.name.toLowerCase() === newName\n    );\n    return isNameExist.length;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isNameExist = checkNewName(name);\n    if (isNameExist) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(contactsOperations.createContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.form__label}>\n        Name\n        <input\n          className={css.form__input}\n          type=\"text\"\n          name={CONSTANTS.name}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.form__label}>\n        Number\n        <input\n          className={css.form__input}\n          type=\"tel\"\n          name={CONSTANTS.number}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={css.btn__submit}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__list\":\"ContactList_contacts__list__hSN0M\"};","import { useSelector } from 'react-redux';\nimport { ContactItem } from 'components';\nimport { contactsSelectors } from 'redux/contacts/contacts-selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const filter = useSelector(contactsSelectors.getFilterValue);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const normalizedFilter = filter.toLowerCase();\n  const contactsByFilter = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <ul className={css.contacts__list}>\n      {contactsByFilter.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__item\":\"ContactItem_contacts__item__0p8Ju\",\"contacts__text\":\"ContactItem_contacts__text__jN4rs\",\"contacts__btn\":\"ContactItem_contacts__btn__DMj2v\",\"btn__wrapper\":\"ContactItem_btn__wrapper__-9N8K\",\"edit__btn\":\"ContactItem_edit__btn__PS5YV\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts/contacts-operations';\nimport { BiEdit } from 'react-icons/bi';\nimport { BsDot } from 'react-icons/bs';\nimport css from './ContactItem.module.css';\nimport { Modal } from 'components';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [isModal, setIsModal] = useState(false);\n\n  const handleClick = () => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  const handleModal = () => {\n    setIsModal(false);\n  };\n\n  const handleEditClick = () => {\n    setIsModal(true);\n  };\n  return (\n    <>\n      <li className={css.contacts__item}>\n        {<BsDot style={{ scale: '1.5' }} />}\n        <p className={css.contacts__text}>\n          {name}: <span>{number}</span>\n        </p>\n        <div className={css.btn__wrapper}>\n          <button\n            type=\"button\"\n            className={css.contacts__btn}\n            onClick={handleClick}\n          >\n            Delete\n          </button>\n          <button\n            type=\"button\"\n            className={css.edit__btn}\n            onClick={handleEditClick}\n          >\n            {<BiEdit style={{ width: '100%', height: '100%' }} />}\n          </button>\n        </div>\n      </li>\n      {isModal && (\n        <Modal id={id} name={name} number={number} onModalClose={handleModal} />\n      )}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  /* background-color: rgba(0, 0, 0, 0.5); */\n  background-color: white;\n  z-index: 1200;\n`;\n\nexport const WorkSpace = styled.div`\n  padding-top: 93px;\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Overlay, WorkSpace } from './Modal.styled';\nimport { useEffect } from 'react';\nimport { EditContactForm } from 'components';\nimport { Heading } from 'components';\nimport { Container } from 'components';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport const Modal = ({ id, name, number, onModalClose }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEvents);\n  });\n\n  function handleEvents(event) {\n    if (event.key === 'Escape' || event.currentTarget === event.target) {\n      window.removeEventListener('keydown', handleEvents);\n      onModalClose();\n    }\n  }\n\n  return createPortal(\n    <Overlay onClick={handleEvents}>\n      <Container>\n        <WorkSpace>\n          <Heading>Edit contact </Heading>\n          <EditContactForm\n            id={id}\n            name={name}\n            number={number}\n            onModalClose={onModalClose}\n          />\n        </WorkSpace>\n      </Container>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onModalClose: PropTypes.func.isRequired,\n};\n"],"names":["Container","styled","Main","Heading","Title","MainText","Header","isLoggedIn","useSelector","authSelectors","NavBar","LinkWrapper","Wrapper","NavLinkStyled","to","UserMenu","NavLink","CONSTANTS","RegContainer","BoxStyled","Box","UserRegistration","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","e","inputName","target","inputValue","value","component","noValidate","onSubmit","preventDefault","normalizedUserData","data","trim","toLowerCase","normalizeInputData","validatedData","isNameCorrect","length","isEmailCorrect","includes","isPasswordCorrect","toast","validateData","authOperations","sx","m","width","TextField","onChange","autoComplete","required","fullWidth","label","autoFocus","type","Button","variant","mt","mb","LogInContainer","UserLogIn","userData","Text","userName","onClick","ml","p","contactsSelectors","state","contacts","items","filter","EditContactForm","id","currentName","currentNumber","number","onModalClose","setNumber","event","currentTarget","console","log","className","css","isNameExist","newName","item","checkNewName","contactsOperations","pattern","title","ContactForm","ContactList","normalizedFilter","contactsByFilter","map","ContactItem","isModal","setIsModal","style","scale","height","Modal","Overlay","WorkSpace","modalRoot","document","getElementById","handleEvents","key","window","removeEventListener","useEffect","addEventListener","createPortal"],"sourceRoot":""}